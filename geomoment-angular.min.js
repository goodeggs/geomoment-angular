(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){var app,directions;app=angular.module("geomoment");directions={before:"isBefore",after:"isAfter"};app.directive("geomoment",function($parse,geomoment){return{require:"ngModel",link:function(scope,elm,attrs,model){var attr,checker,direction,getParameters,getters,maskTime,momentFromString,name,_fn,_ref;getters={};_ref={geomoment:"formats",tzid:"tzid",masks:"masks",before:"before",after:"after"};_fn=function(attr,name){return getters[name]=function(){try{return $parse(attrs[attr])}catch(_error){return function(){return attrs[attr]}}}()};for(attr in _ref){name=_ref[attr];_fn(attr,name)}model.$parsers.unshift(function(value){var checker,direction,moment,parameters,validator;parameters=getParameters(scope);if(value==null||value.trim().length===0){model.$setValidity("invalidGeomoment",true);model.$setValidity("beforeGeomoment",true);model.$setValidity("afterGeomoment",true);return null}moment=momentFromString(value,parameters);if(!moment.isValid()){model.$setValidity("invalidGeomoment",false);return model.$modelValue}model.$setValidity("invalidGeomoment",true);moment=maskTime(moment,parameters);for(direction in directions){checker=directions[direction];if(parameters[direction]!=null){validator=""+direction+"Geomoment";if(moment[checker](maskTime(geomoment(parameters[direction]),parameters))){model.$setValidity(validator,true)}else{model.$setValidity(validator,false)}}}return moment.toDate()});model.$formatters.unshift(function(value){var moment,parameters;if(value==null){return}parameters=getParameters(scope);moment=geomoment(value);if(parameters.tzid!=null){moment=moment.tz(parameters.tzid)}return moment.format([].concat(parameters.formats)[0])});if(attrs.placeholder==null){scope.$watch(getters.formats,function(formats){return attrs.$set("placeholder",[].concat(formats)[0])})}for(direction in directions){checker=directions[direction];if(attrs[direction]!=null){(function(direction,checker){var validator;validator=""+direction+"Geomoment";return scope.$watch(getters[direction],function(value){var result;if(!(value&&model.$modelValue)){return}result=geomoment(model.$modelValue)[checker](value);if(result){return model.$setValidity(validator,true)}else{return model.$setValidity(validator,false)}})})(direction,checker)}}elm.on("blur",function(){var formattedTime,moment,parameters,_ref1;if(!((_ref1=model.$viewValue)!=null?_ref1.trim().length:void 0)){return}parameters=getParameters(scope);moment=momentFromString(model.$viewValue,parameters);if(parameters.tzid!=null){moment=moment.tz(parameters.tzid)}formattedTime=moment.format([].concat(parameters.formats)[0]);if(moment.isValid()&&model.$viewValue!==formattedTime){return elm.val(formattedTime)}});getParameters=function(scope){var getter,parameters;parameters={};for(attr in getters){getter=getters[attr];parameters[attr]=getter(scope)}return parameters};momentFromString=function(timeString,_arg){var formats,tzid;formats=_arg.formats,tzid=_arg.tzid;if(tzid!=null){return geomoment.tz(timeString,formats,tzid)}else{return geomoment(timeString,formats)}};return maskTime=function(inMoment,_arg){var mask,masks,outMoment,tzid,_i,_len;masks=_arg.masks,tzid=_arg.tzid;if(masks==null){return inMoment}if(typeof masks!=="array"){masks=masks.split(",")}outMoment=geomoment(model.$modelValue).tz(tzid);for(_i=0,_len=masks.length;_i<_len;_i++){mask=masks[_i];outMoment[mask](inMoment[mask]())}return outMoment}}}})},{}],2:[function(require,module,exports){var app;app=angular.module("geomoment");app.factory("geomoment",function(){return window.geomoment})},{}],3:[function(require,module,exports){var app;app=angular.module("geomoment");app.filter("addTime",["geomoment",function(geomoment){return function(timestamp,key,amount){return geomoment(timestamp).add(key,amount).toDate()}}])},{}],4:[function(require,module,exports){var app;app=angular.module("geomoment");app.filter("date",function(){return function(){throw Error("Please use `formatDate` instead of `date`.")}})},{}],5:[function(require,module,exports){var app,__indexOf=[].indexOf||function(item){for(var i=0,l=this.length;i<l;i++){if(i in this&&this[i]===item)return i}return-1};app=angular.module("geomoment");app.filter("formatDate",["geomoment",function(geomoment){return function(date,tzid,outFormat){if(date==null){return""}if(!tzid){throw Error("tzid required")}if(__indexOf.call(Object.keys(geomoment.formats),outFormat)>=0){outFormat=geomoment.formats[outFormat]}return geomoment(date).tz(tzid).format(outFormat)}}])},{}],6:[function(require,module,exports){var app,__indexOf=[].indexOf||function(item){for(var i=0,l=this.length;i<l;i++){if(i in this&&this[i]===item)return i}return-1};app=angular.module("geomoment");app.filter("formatDay",["geomoment",function(geomoment){return function(day,outFormat){if(__indexOf.call(Object.keys(geomoment.formats),outFormat)>=0){outFormat=geomoment.formats[outFormat]}return geomoment.day(day,geomoment.pacific.tzid).format(outFormat)}}])},{}],7:[function(require,module,exports){var app;app=angular.module("geomoment");app.filter("subtractTime",["geomoment",function(geomoment){return function(timestamp,key,amount){return geomoment(timestamp).subtract(key,amount).toDate()}}])},{}],8:[function(require,module,exports){var app;app=angular.module("geomoment",[]);require("./factories/geomoment");require("./filters/date");require("./filters/format_date");require("./filters/format_day");require("./filters/add_time");require("./filters/subtract_time");require("./directives/geomoment");app},{"./directives/geomoment":1,"./factories/geomoment":2,"./filters/add_time":3,"./filters/date":4,"./filters/format_date":5,"./filters/format_day":6,"./filters/subtract_time":7}]},{},[8]);